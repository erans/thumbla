name: CI/CD Pipeline

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  # Job for Pull Requests: Build and test only, no Docker push
  test-pr:
    name: Build and Test (PR)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.0
        with:
          go-version: 1.25.1
          cache: true

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libwebp-dev

      - name: Download Go modules
        run: go mod download

      - name: Run tests with coverage
        run: go test -race -coverprofile=coverage.out -v ./...

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: coverage.out
          fail_ci_if_error: false

      - name: Build Docker image (no push)
        run: docker build . --file Dockerfile --tag thumbla:pr-${{ github.event.number }}

  # Job for Main Branch: Build, test, and push Docker image
  build-and-deploy:
    name: Build, Test and Deploy (Main)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go environment
        uses: actions/setup-go@v5.0.0
        with:
          go-version: 1.25.1
          cache: true

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libwebp-dev

      - name: Download Go modules
        run: go mod download

      - name: Run tests with coverage
        run: go test -race -coverprofile=coverage.out -v ./...

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USER }}/thumbla
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{date 'YYYYMMDD-HHmmss'}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
